name: psc-spack-ubuntu-20.04 build and push to GHCR

on:
  push:
    branches: [ main ]

jobs:

  spack-ubuntu-20-04:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get changed files spack-ubuntu-20.04
        id: changed-spack-ubuntu-20-04
        uses: tj-actions/changed-files@v5.3
        with:
          files: |
            spack-ubuntu-20.04/Dockerfiles
      
      - name: Set up Docker Buildx
        id: buildx
        if: steps.changed-ubuntu-20-04.any_changed == 'true'
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        if: steps.changed-ubuntu-20-04.any_changed == 'true'
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-build-docker-spack-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-docker-spack
  
      - name: Login to ghcr
        if: |
          steps.changed-ubuntu-20-04.any_changed == 'true'
          && github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        if: steps.changed-ubuntu-20-04.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: spack-ubuntu-20.04/
          file: spack-ubuntu-20.04/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ghcr.io/germasch/spack-ubuntu-20.04:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        if: steps.changed-ubuntu-20-04.any_changed == 'true'
        run: echo ${{ steps.docker_build.outputs.digest }}

  psc-spack-ubuntu-20-04:
    needs: spack-ubuntu-20-04
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-build-docker-spack-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-docker-spack
  
      - name: Login to ghcr
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: psc-spack-ubuntu-20.04/
      #     file: psc-spack-ubuntu-20.04/Dockerfile
      #     builder: ${{ steps.buildx.outputs.name }}
      #     push: true
      #     tags: ghcr.io/germasch/psc-spack-ubuntu-20.04:latest
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  psc-spack-cuda-ubuntu-20-04:
    needs: psc-spack-ubuntu-20-04
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-build-docker-spack-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-docker-spack
  
      - name: Login to ghcr
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: psc-spack-cuda-ubuntu-20.04/
      #     file: psc-spack-cuda-ubuntu-20.04/Dockerfile
      #     builder: ${{ steps.buildx.outputs.name }}
      #     push: true
      #     tags: ghcr.io/germasch/psc-spack-cuda-ubuntu-20.04:latest
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
